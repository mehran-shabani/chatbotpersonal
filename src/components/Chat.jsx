import React, { useState, useEffect } from 'react'; import { Box, Paper, ThemeProvider, CssBaseline } from '@mui/material'; import { motion } from 'framer-motion'; import { fetchModels, sendMessage, createBubbleData } from './chatUtils'; import { useTheme } from './chatStyles'; import ChatHeader from './ChatHeader'; import ChatMessages from './ChatMessages'; import ChatInput from './ChatInput'; const Chat = ({ user }) => { const [messages, setMessages] = useState([]); const [models, setModels] = useState([]); const [selectedModelIndex, setSelectedModelIndex] = useState(0); const [loading, setLoading] = useState(false); const [isDarkMode] = useState(false); const [aiResponseLoading, setAiResponseLoading] = useState(false); const { theme, toggleDarkMode } = useTheme(isDarkMode); useEffect(() => { fetchModels(setLoading, setModels, setSelectedModelIndex); }, []); const handleSend = async (text) => { if (!text.trim() || models.length === 0) return; const selectedModel = models[selectedModelIndex]?.model; await sendMessage(text, selectedModel, user, setMessages, setAiResponseLoading); }; const bubbleData = createBubbleData(messages); return ( <ThemeProvider theme={theme}> <CssBaseline /> <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.5 }} > <Box sx={{ minHeight: '100vh', p: 3, display: 'flex', justifyContent: 'center', alignItems: 'center' }}> <Paper elevation={6} sx={{ width: '100%', maxWidth: 800, p: 4, borderRadius: 4 }}> <ChatHeader isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} models={models} selectedModelIndex={selectedModelIndex} setSelectedModelIndex={setSelectedModelIndex} /> <ChatMessages bubbleData={bubbleData} aiResponseLoading={aiResponseLoading} /> <ChatInput handleSend={handleSend} loading={loading} aiResponseLoading={aiResponseLoading} /> <Box mt={2} display="flex" justifyContent="space-between" alignItems="center"> {/* Model info and user info */} </Box> </Paper> </Box> </motion.div> </ThemeProvider> ); }; export default Chat;